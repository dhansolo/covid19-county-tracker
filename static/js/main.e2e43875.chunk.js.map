{"version":3,"sources":["index.js"],"names":["current","currentDate","date","moment","subtract","month","year","sevenDay","info","minConfirmed","minDeaths","maxConfirmed","maxDeaths","CountyData","props","state","county","loading","data","notFound","handleCountyChange","bind","handleStateChange","handleSearchClick","event","target","value","this","setState","count","callAxios","reformattedCounty","includes","substring","indexOf","axios","process","then","response","length","region","cities","confirmed_diff","deaths_diff","push","confirmed","deaths","sort","a","b","Date","catch","error","console","log","Info","name","loadImage","notfound","LoadingScreen","NotFound","class","id","type","label","onChange","variant","size","onClick","React","Component","rate","container","justify","item","xs","toFixed","VisualizeConfirmed","VisualizeDeaths","recentLabel","Math","abs","interpolation","style","stroke","parent","border","width","x","y","animate","duration","opacity","onLoad","domain","WorldData","DisplayWorldData","fatality_rate","recovered","App","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2e43875.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './index.css';\n\nimport * as moment from 'moment/moment';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {VictoryChart, VictoryLine, VictoryScatter} from 'victory';\n\n// Create a date string in the format YYYY-MM-DD\nlet date = moment().subtract(1, 'days');\nlet current;\nlet currentDate;\nif(date.month() + 1 < 10) {\n    if(date.date() < 10) {\n        currentDate = date.year() + \"-0\" + (date.month() + 1) + \"-0\" + date.date();\n    } else {\n        currentDate = date.year() + \"-0\" + (date.month() + 1) + \"-\" + date.date();\n    }\n} else {\n    if(date.date() < 10) {\n        currentDate = date.year() + \"-\" + (date.month() + 1) + \"-0\" + date.date();\n    } else {\n        currentDate = date.year() + \"-\" + (date.month() + 1) + \"-\" + date.date();\n    }\n}\n\nlet sevenDay = [];\nlet info = null;\n\nlet minConfirmed = null;\nlet minDeaths = null;\nlet maxConfirmed = null;\nlet maxDeaths = null;\n\n\nclass CountyData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            county: \"\",\n            state: \"\",\n            loading: false,\n            data: null,\n            notFound: false,\n        }\n        this.handleCountyChange = this.handleCountyChange.bind(this);\n        this.handleStateChange = this.handleStateChange.bind(this);\n        this.handleSearchClick = this.handleSearchClick.bind(this);\n    }\n\n    // Every keypress in the County input field will cause an update\n    handleCountyChange(event) {\n        if(event.target.value) {\n            this.setState({\n                county: event.target.value,\n                data: null,\n                notFound: false\n            });\n        } else if(event.target.value === \"\") {\n            this.setState({\n                county: \"\",\n                data: null,\n                notFound: false\n            });\n        }\n    }\n\n    // When a state is selected on the dropdown menu\n    handleStateChange(event) {\n        this.setState({\n            state: event.target.value,\n            data: null,\n            notFound: false\n        });\n    }\n\n    // This is where all of the movement occurs\n    async handleSearchClick() {\n        if(this.state.county === \"\" || this.state.state === \"\") { return; }\n        // Reset all necessary variables before you search again\n        sevenDay = [];\n        this.setState({ data: null});\n        info = null;\n        minConfirmed = null;\n        minDeaths = null;\n        maxConfirmed = null;\n        maxDeaths = null;\n        let count = 0;\n\n        this.setState({ county: this.state.county, loading: true, notFound: false, data: null}); \n        // Looping 7 times to get 7 days worth of data\n        while(count < 7) {  \n            date = moment().subtract(1 + count, 'days');\n            current = \"\";\n            if(date.month() + 1 < 10) {\n                if(date.date() < 10) {\n                    current = date.year() + \"-0\" + (date.month() + 1) + \"-0\" + date.date();\n                } else {\n                    current = date.year() + \"-0\" + (date.month() + 1) + \"-\" + date.date();\n                }\n            } else {\n                if(date.date() < 10) {\n                    current = date.year() + \"-\" + (date.month() + 1) + \"-0\" + date.date();\n                } else {\n                    current = date.year() + \"-\" + (date.month() + 1) + \"-\" + date.date();\n                }\n            }\n            this.callAxios(current);\n            count++;\n        }\n    }\n\n    // Function to make the Axios http request so that the above looks cleaner\n    async callAxios(current) {\n        // API doesn't like the word 'county' so I'm reformatting the user's terms here to omit 'county'\n        // as well as adjusting the casing as the API likes exactness\n        let reformattedCounty = this.state.county\n        if(reformattedCounty.includes(\"county\")) {\n            reformattedCounty = reformattedCounty.substring(0, reformattedCounty.indexOf(\"county\") - 1);\n        }\n        return axios({\n            \"method\":\"GET\",\n            \"url\":\"https://covid-19-statistics.p.rapidapi.com/reports\",\n            \"headers\":{\n                \"content-type\":\"application/octet-stream\",\n                \"x-rapidapi-host\": process.env.REACT_APP_HOST,\n                \"x-rapidapi-key\": process.env.REACT_APP_API_KEY\n            },\n            \"params\":{\n                \"region_province\":this.state.state,\n                \"iso\":\"USA\",\n                \"region_name\":\"US\",\n                \"city_name\":reformattedCounty,\n                \"date\":current,\n                \"q\":\"US \" + this.state.state\n            }\n        })\n        .then((response)=>{\n            if(response.data.data.length > 0) {\n                if(current === currentDate) {\n                    this.setState({ data: response.data.data[0].region.cities[0], notFound: false});\n                }\n                if(response.data.data[0].region.cities[0].confirmed_diff < minConfirmed || minConfirmed === null) { \n                    minConfirmed = response.data.data[0].region.cities[0].confirmed_diff; \n                }\n                if(response.data.data[0].region.cities[0].confirmed_diff > maxConfirmed || maxConfirmed === null) { \n                    maxConfirmed = response.data.data[0].region.cities[0].confirmed_diff; \n                }\n                if(response.data.data[0].region.cities[0].deaths_diff < minDeaths || minDeaths === null) { \n                    minDeaths = response.data.data[0].region.cities[0].deaths_diff; \n                }\n                if(response.data.data[0].region.cities[0].deaths_diff > maxDeaths || maxDeaths === null) { \n                    maxDeaths = response.data.data[0].region.cities[0].deaths_diff; \n                }\n                // Push data into sevenDay array\n                sevenDay.push(\n                    {\n                        date: current,\n                        confirmed: response.data.data[0].region.cities[0].confirmed_diff,\n                        deaths: response.data.data[0].region.cities[0].deaths_diff\n                    }\n                )\n                // Sort it by date after every push\n                sevenDay.sort((a, b) => new Date(a.date) - new Date(b.date));\n                if(sevenDay.length === 7) {\n                    // Will not stop loading until there is exactly 7 items in the array\n                    this.setState({ loading: false })\n                }\n            } else {\n                // Data not found\n                this.setState({ data: null, notFound: true, loading: false});\n            }\n        })\n        .catch((error)=>{\n            console.log(error);\n            return;\n        }) \n    }\n\n    render() {\n        if(this.state.data && !this.state.loading) {\n            // Throwing everything to the Info component to render\n            info = <Info \n                confirmed={this.state.data.confirmed} \n                deaths={this.state.data.deaths} \n                county={this.state.data.name} \n                state={this.state.state} \n                minConfirmed={minConfirmed} \n                minDeaths={minDeaths}\n                maxConfirmed={maxConfirmed}\n                maxDeaths={maxDeaths}\n                />;\n        }\n        let loadImage = null;\n        let notfound = null;\n        if(this.state.loading) {loadImage = <LoadingScreen />}\n        if(this.state.notFound) {notfound = <NotFound />}\n        return (\n            <div>\n                <div class=\"search\">\n                    <TextField id=\"search-county\" type=\"text\" label=\"County\" value={this.state.county} onChange={this.handleCountyChange}></TextField>\n                    <FormControl id=\"search-state\">\n                        <InputLabel>State</InputLabel>\n                        <Select type=\"text\" value={this.state.state} onChange={this.handleStateChange}>\n                            <MenuItem value=\"Alabama\">Alabama</MenuItem>\n                            <MenuItem value=\"Alaska\">Alaska</MenuItem>\n                            <MenuItem value=\"Arizona\">Arizona</MenuItem>\n                            <MenuItem value=\"Arkansas\">Arkansas</MenuItem>\n                            <MenuItem value=\"California\">California</MenuItem>\n                            <MenuItem value=\"Colorado\">Colorado</MenuItem>\n                            <MenuItem value=\"Connecticut\">Connecticut</MenuItem>\n                            <MenuItem value=\"Delaware\">Delaware</MenuItem>\n                            <MenuItem value=\"Florida\">Florida</MenuItem>\n                            <MenuItem value=\"Georgia\">Georgia</MenuItem>\n                            <MenuItem value=\"Hawaii\">Hawaii</MenuItem>\n                            <MenuItem value=\"Idaho\">Idaho</MenuItem>\n                            <MenuItem value=\"Illinois\">Illinois</MenuItem>\n                            <MenuItem value=\"Indiana\">Indiana</MenuItem>\n                            <MenuItem value=\"Iowa\">Iowa</MenuItem>\n                            <MenuItem value=\"Kansas\">Kansas</MenuItem>\n                            <MenuItem value=\"Kentucky\">Kentucky</MenuItem>\n                            <MenuItem value=\"Louisiana\">Louisiana</MenuItem>\n                            <MenuItem value=\"Maine\">Maine</MenuItem>\n                            <MenuItem value=\"Maryland\">Maryland</MenuItem>\n                            <MenuItem value=\"Massachusetts\">Massachusetts</MenuItem>\n                            <MenuItem value=\"Michigan\">Michigan</MenuItem>\n                            <MenuItem value=\"Minnesota\">Minnesota</MenuItem>\n                            <MenuItem value=\"Mississippi\">Mississippi</MenuItem>\n                            <MenuItem value=\"Missouri\">Missouri</MenuItem>\n                            <MenuItem value=\"Montana\">Montana</MenuItem>\n                            <MenuItem value=\"Nebraska\">Nebraska</MenuItem>\n                            <MenuItem value=\"Nevada\">Nevada</MenuItem>\n                            <MenuItem value=\"New Hampshire\">New Hampshire</MenuItem>\n                            <MenuItem value=\"New Jersey\">New Jersey</MenuItem>\n                            <MenuItem value=\"New Mexico\">New Mexico</MenuItem>\n                            <MenuItem value=\"New York\">New York</MenuItem>\n                            <MenuItem value=\"North Carolina\">North Carolina</MenuItem>\n                            <MenuItem value=\"North Dakota\">North Dakota</MenuItem>\n                            <MenuItem value=\"Ohio\">Ohio</MenuItem>\n                            <MenuItem value=\"Oklahoma\">Oklahoma</MenuItem>\n                            <MenuItem value=\"Oregon\">Oregon</MenuItem>\n                            <MenuItem value=\"Pennsylvania\">Pennsylvania</MenuItem>\n                            <MenuItem value=\"Rhode Island\">Rhode Island</MenuItem>\n                            <MenuItem value=\"South Carolina\">South Carolina</MenuItem>\n                            <MenuItem value=\"South Dakota\">South Dakota</MenuItem>\n                            <MenuItem value=\"Tennessee\">Tennessee</MenuItem>\n                            <MenuItem value=\"Texas\">Texas</MenuItem>\n                            <MenuItem value=\"Utah\">Utah</MenuItem>\n                            <MenuItem value=\"Vermont\">Vermont</MenuItem>\n                            <MenuItem value=\"Virginia\">Virginia</MenuItem>\n                            <MenuItem value=\"Washington\">Washington</MenuItem>\n                            <MenuItem value=\"West Virginia\">West Virginia</MenuItem>\n                            <MenuItem value=\"Wisconsin\">Wisconsin</MenuItem>\n                            <MenuItem value=\"Wyoming\">Wyoming</MenuItem>\n                        </Select>\n                    </FormControl>\n                </div>\n                <Button id=\"search-button\" variant=\"outlined\" size=\"small\" onClick={this.handleSearchClick}>Search</Button>\n                <div id=\"result\">\n                    {info}\n                    {loadImage}\n                    {notfound}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Info extends React.Component {\n    render() {\n        let rate = (this.props.deaths/this.props.confirmed) * 100;\n        return (\n            <div>\n                <Grid container justify=\"center\">\n                    <div class=\"info\">\n                        <Grid item xs={12}>\n                            <h3>Statistics for {this.props.county} County, {this.props.state}</h3>\n                            <p>Confirmed: {this.props.confirmed} | Fatalities: {this.props.deaths} | Approximate Fatality Rate: {rate.toFixed(3)}%</p>\n                        </Grid>\n                        <Grid container>\n                                <VisualizeConfirmed county={this.props.county} minConfirmed={this.props.minConfirmed} maxConfirmed={this.props.maxConfirmed}/>\n                                <VisualizeDeaths county={this.props.county} minDeaths={this.props.minDeaths} maxDeaths={this.props.maxDeaths}/>\n                        </Grid>\n                    </div>\n                </Grid>\n            </div>\n        )  \n    }\n}\n\nclass VisualizeConfirmed extends React.Component {\n    render() {\n        let recentLabel = Math.abs(sevenDay[6].confirmed) + \" new cases\";\n        return(\n            <div>\n                <h4>Changes in Confirmed Cases Over 7 Days for {this.props.county} County</h4>\n                <VictoryChart>\n                    <VictoryLine\n                        interpolation=\"natural\"\n                        style={{\n                            data: { stroke: \"#c43a31\" },\n                            parent: { border: \"1px solid black\", width: \"10%\"}\n                        }}\n                        data={[\n                            {x: sevenDay[0].date.substring(5, sevenDay[0].date.length), y: sevenDay[0].confirmed},\n                            {x: sevenDay[1].date.substring(5, sevenDay[1].date.length), y: sevenDay[1].confirmed},\n                            {x: sevenDay[2].date.substring(5, sevenDay[2].date.length), y: sevenDay[2].confirmed},\n                            {x: sevenDay[3].date.substring(5, sevenDay[3].date.length), y: sevenDay[3].confirmed},\n                            {x: sevenDay[4].date.substring(5, sevenDay[4].date.length), y: sevenDay[4].confirmed},\n                            {x: sevenDay[5].date.substring(5, sevenDay[5].date.length), y: sevenDay[5].confirmed},\n                            {x: sevenDay[6].date.substring(5, sevenDay[6].date.length), y: sevenDay[6].confirmed, label: recentLabel},\n                        ]}\n                        animate={{\n                            duration: 2000,\n                            opacity: 0.0,\n                            onLoad: { \n                                duration: 1000,\n                                opacity: 1.0\n                            },\n                        }}\n                        domain={{\n                            y: [0, this.props.maxConfirmed + 10]\n                        }}\n                    />\n                    <VictoryScatter\n                        data={[\n                            {x: sevenDay[0].date.substring(5, sevenDay[0].date.length), y: sevenDay[0].confirmed},\n                            {x: sevenDay[1].date.substring(5, sevenDay[1].date.length), y: sevenDay[1].confirmed},\n                            {x: sevenDay[2].date.substring(5, sevenDay[2].date.length), y: sevenDay[2].confirmed},\n                            {x: sevenDay[3].date.substring(5, sevenDay[3].date.length), y: sevenDay[3].confirmed},\n                            {x: sevenDay[4].date.substring(5, sevenDay[4].date.length), y: sevenDay[4].confirmed},\n                            {x: sevenDay[5].date.substring(5, sevenDay[5].date.length), y: sevenDay[5].confirmed},\n                            {x: sevenDay[6].date.substring(5, sevenDay[6].date.length), y: sevenDay[6].confirmed, label: recentLabel},\n                        ]}\n                        animate={{\n                            duration: 2000,\n                            opacity: 0.0,\n                            onLoad: { \n                                duration: 1000,\n                                opacity: 1.0\n                            },\n                        }}\n                        domain={{\n                            y: [0, this.props.maxConfirmed + 10]\n                        }}\n                    />\n                </VictoryChart>\n            </div>\n        )\n    }\n}\n\nclass VisualizeDeaths extends React.Component {\n    render() {\n        let recentLabel = Math.abs(sevenDay[6].deaths) + \" new fatalities\";\n        return(\n            <div>\n                <h4>Number of Fatalities Over 7 Days for {this.props.county} County</h4>\n                <VictoryChart>\n                    <VictoryLine\n                        interpolation=\"natural\"\n                        style={{\n                            data: { stroke: \"#c43a31\" },\n                            parent: { border: \"1px solid black\", width: \"10%\"}\n                        }}\n                        data={[\n                            {x: sevenDay[0].date.substring(5, sevenDay[0].date.length), y: sevenDay[0].deaths},\n                            {x: sevenDay[1].date.substring(5, sevenDay[1].date.length), y: sevenDay[1].deaths},\n                            {x: sevenDay[2].date.substring(5, sevenDay[2].date.length), y: sevenDay[2].deaths},\n                            {x: sevenDay[3].date.substring(5, sevenDay[3].date.length), y: sevenDay[3].deaths},\n                            {x: sevenDay[4].date.substring(5, sevenDay[4].date.length), y: sevenDay[4].deaths},\n                            {x: sevenDay[5].date.substring(5, sevenDay[5].date.length), y: sevenDay[5].deaths},\n                            {x: sevenDay[6].date.substring(5, sevenDay[6].date.length), y: sevenDay[6].deaths, label: recentLabel},\n                        ]}\n                        animate={{\n                            duration: 2000,\n                            opacity: 0.0,\n                            onLoad: { \n                                duration: 1000,\n                                opacity: 1.0\n                            },\n\n                        }}\n                        domain={{\n                            y: [0, this.props.maxDeaths + 5]\n                        }}\n                    />\n                    <VictoryScatter\n                        data={[\n                            {x: sevenDay[0].date.substring(5, sevenDay[0].date.length), y: sevenDay[0].deaths},\n                            {x: sevenDay[1].date.substring(5, sevenDay[1].date.length), y: sevenDay[1].deaths},\n                            {x: sevenDay[2].date.substring(5, sevenDay[2].date.length), y: sevenDay[2].deaths},\n                            {x: sevenDay[3].date.substring(5, sevenDay[3].date.length), y: sevenDay[3].deaths},\n                            {x: sevenDay[4].date.substring(5, sevenDay[4].date.length), y: sevenDay[4].deaths},\n                            {x: sevenDay[5].date.substring(5, sevenDay[5].date.length), y: sevenDay[5].deaths},\n                            {x: sevenDay[6].date.substring(5, sevenDay[6].date.length), y: sevenDay[6].deaths, label: recentLabel},\n                        ]}\n                        animate={{\n                            duration: 2000,\n                            opacity: 0.0,\n                            onLoad: { \n                                duration: 1000,\n                                opacity: 1.0\n                            },\n\n                        }}\n                        domain={{\n                            y: [0, this.props.maxDeaths + 5]\n                        }}\n                    />\n                </VictoryChart>\n            </div>\n        )\n    }\n}\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <div class=\"info\">\n                <p>\n                No data found, are you sure you entered the correct County and State?\n                </p>\n                <p>\n                Please note that data from John Hopkins University may contain some\n                discrepencies.\n                </p>\n            </div>\n        )\n    }\n}\n\nclass WorldData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true\n        }\n    }\n    componentDidMount() {\n        axios({\n            \"method\":\"GET\",\n            \"url\":\"https://covid-19-statistics.p.rapidapi.com/reports/total\",\n            \"headers\":{\n                \"content-type\":\"application/octet-stream\",\n                \"x-rapidapi-host\": process.env.REACT_APP_HOST,\n                \"x-rapidapi-key\": process.env.REACT_APP_API_KEY\n            },\"params\":{\n                \"date\":currentDate\n            }\n            })\n            .then((response)=>{\n              this.setState({ data: response.data.data, loading: false});\n            })\n            .catch((error)=>{\n              console.log(error)\n            })\n    }\n    render() {\n        let data;\n        let loadImage;\n        if(this.state.loading) {\n            loadImage = <LoadingScreen />\n        }\n        if(this.state.data) {\n            data = <DisplayWorldData data={this.state.data}/>\n        }\n        return (\n            <div>\n                {loadImage}\n                {data}\n            </div>\n        )\n    }\n}\n\nclass LoadingScreen extends React.Component {\n    render() {\n        return (\n            <CircularProgress />\n        )\n    }\n}\n\nclass DisplayWorldData extends React.Component {\n    render() {\n        let rate = (this.props.data.fatality_rate * 100);\n        return(\n            <div>\n                <h4>World Statistics</h4>\n                <p>Confirmed: {this.props.data.confirmed} | Recovered: {this.props.data.recovered} | Fatalities: {this.props.data.deaths} | Fatality Rate: {rate.toFixed(3)}%</p>\n            </div>\n        )\n    }\n}\n\nfunction App() {\n    return (\n        <Grid container justify=\"center\">\n            <Grid item xs={12}>\n                <div class=\"main\">\n                    <div class=\"headers\">\n                        <h1>COVID-19 County Tracker</h1>\n                        <h4>Data as of {currentDate}</h4>\n                    </div>\n                    <header class=\"world-data\"><WorldData /></header>\n                    <div class=\"search\"><CountyData /></div>\n                    <footer>Created by <a href=\"https://www.linkedin.com/in/davidhan93/\">David Han</a> | <a href=\"https://rapidapi.com/axisbits-axisbits-default/api/covid-19-statistics\">Data</a> provided by John Hopkins University</footer>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}